
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CURRENT_DATE CURRENT_TIMESTAMP DB_CONFIG DO DYNAMIC_PARAM EACH EMBED_PYTHON EQUAL EXPECT_EQUAL FINAL_CHECK FOR ID IN INIT INTO LBRACE LBRACKET LPAREN NUMBER PYTHON_EXP RAND_DOUBLE RAND_INT RAND_STRING RANGE RBRACE RBRACKET RESULT_SET RPAREN RUNTIME_CONFIG SEMICOLON SEQUENCE SET SHARED_LIST STRING TEST_CASE UNDO WITHtest_spec : config_spec case_specconfig_spec : db_config_spec runtime_config_specdb_config_spec : DB_CONFIG LBRACE STRING RBRACEruntime_config_spec : RUNTIME_CONFIG LBRACE STRING RBRACEcase_spec : case_stmt\n                  | case_spec case_stmtcase_stmt : TEST_CASE case_name case_start case_body case_endcase_name : IDcase_start : LBRACEcase_end : RBRACEcase_body : dynamic_param_stmt init_stmt do_stmt undo_stmt final_check_stmt\n                  | init_stmt do_stmt undo_stmt final_check_stmtdynamic_param_stmt : DYNAMIC_PARAM d_start dynamic_var_declarations d_endd_start : LBRACEd_end : RBRACEdynamic_var_declarations : dynamic_var_declarations dynamic_var_declaration\n                                 | dynamic_var_declarationdynamic_var_declaration : ID EQUAL rulerule : random_int\n             | random_double\n             | current_date\n             | current_timestamp\n             | random_string\n             | sequencerandom_int : RAND_INT LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPARENrandom_double : RAND_DOUBLE LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPARENcurrent_date : CURRENT_DATE LPAREN NUMBER RPARENcurrent_timestamp : CURRENT_TIMESTAMP LPAREN NUMBER RPARENrandom_string : RAND_STRING LPAREN NUMBER COMMA NUMBER RPARENsequence : SEQUENCE LPAREN NUMBER COMMA NUMBER RPARENpython_expr : PYTHON_EXP LPAREN STRING RPARENshared_var : SHARED_LISTinit_stmt : INIT init_start init_body init_endinit_start : LBRACEinit_end : RBRACEinit_body : executable_stmtsdo_stmt : DO do_start do_body do_enddo_start : LBRACEdo_end : RBRACEdo_body : executable_stmtsundo_stmt : UNDO undo_start undo_body undo_endundo_start : LBRACEundo_end : RBRACEundo_body : executable_stmtsfinal_check_stmt : FINAL_CHECK final_check_start final_body final_check_endfinal_check_start : LBRACEfinal_body : executable_stmtsfinal_check_end : RBRACEexecutable_stmts : executable_stmt\n                         | executable_stmts executable_stmtexecutable_stmt : expression SEMICOLON\n                        | assignment SEMICOLON\n                        | assertion SEMICOLON\n                        | for_stmt\n                        | for_each_stmt\n                        | embed_python_stmt SEMICOLONassertion : EXPECT_EQUAL LPAREN expression COMMA expression RPARENassignment : ID EQUAL expression\n                   | ID EQUAL shared_varexpression : query_stmt\n                   | result_set_query_stmt\n                   | query_into_stmt\n                   | query_with_stmt\n                   | query_with_into_stmt\n                   | var_name\n                   | set\n                   | rule\n                   | python_expr\n                   | NUMBERset : SET LPAREN STRING RPARENquery_stmt : COLON STRINGresult_set_query_stmt : COLON RESULT_SET LPAREN STRING RPARENquery_into_stmt : COLON STRING INTO var_listvar_name : ID\n                 | ID LBRACKET NUMBER RBRACKET\n                 | ID LBRACKET ID RBRACKETvar_list : var_name\n                 | var_list COMMA var_namequery_with_stmt : COLON STRING WITH var_listquery_with_into_stmt : COLON STRING WITH var_list INTO var_listfor_stmt : for_start1 executable_stmts for_end\n                 | for_start2 executable_stmts for_endfor_start1 : FOR ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN  LBRACEfor_start2 : FOR ID IN RANGE LPAREN ID RPAREN  LBRACEfor_end : RBRACEfor_each_stmt : for_each_start executable_stmts for_each_endfor_each_start : FOR EACH var_list LBRACEfor_each_end : RBRACEembed_python_stmt : EMBED_PYTHON LPAREN STRING RPAREN'
    
_lr_action_items = {'DB_CONFIG':([0,],[4,]),'$end':([1,5,6,11,26,27,],[0,-1,-5,-6,-7,-10,]),'TEST_CASE':([2,5,6,8,11,25,26,27,],[7,7,-5,-2,-6,-4,-7,-10,]),'RUNTIME_CONFIG':([3,19,],[9,-3,]),'LBRACE':([4,9,12,13,23,24,30,37,86,129,148,149,160,161,184,197,205,],[10,14,17,-8,32,34,39,88,123,-74,170,-77,-76,-75,-78,201,207,]),'ID':([7,31,32,33,34,38,39,40,41,44,45,49,50,64,65,66,70,71,72,73,74,75,77,87,88,90,92,97,98,99,100,101,102,103,104,105,106,107,114,122,123,125,128,136,137,138,139,140,142,143,157,162,170,171,174,175,181,183,195,196,201,203,207,208,],[13,42,-14,62,-34,62,-38,42,-17,62,-49,-54,-55,62,62,62,-19,-20,-21,-22,-23,-24,113,62,-42,62,-16,-50,-51,-52,-53,-56,129,133,129,62,62,62,129,62,-46,62,-18,-81,-85,-82,-86,-88,129,129,62,129,-87,129,-27,-28,129,191,-29,-30,-84,-25,-83,-26,]),'STRING':([10,14,68,108,111,112,144,],[15,18,109,141,145,146,166,]),'RBRACE':([15,18,20,40,41,43,44,45,49,50,70,71,72,73,74,75,85,89,90,92,97,98,99,100,101,105,106,107,121,124,125,128,136,137,138,139,140,156,157,174,175,178,179,195,196,203,208,],[19,25,27,93,-17,96,-36,-49,-54,-55,-19,-20,-21,-22,-23,-24,-12,127,-40,-16,-50,-51,-52,-53,-56,137,137,140,-11,159,-44,-18,-81,-85,-82,-86,-88,179,-47,-27,-28,-45,-48,-29,-30,-25,-26,]),'DYNAMIC_PARAM':([16,17,],[23,-9,]),'INIT':([16,17,21,91,93,],[24,-9,24,-13,-15,]),'DO':([22,28,95,96,],[30,30,-33,-35,]),'UNDO':([29,35,126,127,],[37,37,-37,-39,]),'NUMBER':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,122,123,125,136,137,138,139,140,157,162,170,172,173,176,177,183,193,194,198,201,204,207,],[61,-34,61,-38,61,-49,-54,-55,61,61,61,61,-42,61,-50,-51,-52,-53,-56,61,134,61,61,61,61,150,151,152,153,154,155,61,-46,61,-81,-85,-82,-86,-88,61,61,-87,185,186,187,188,192,199,200,202,-84,206,-83,]),'EXPECT_EQUAL':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,105,106,107,122,123,125,136,137,138,139,140,157,170,201,207,],[63,-34,63,-38,63,-49,-54,-55,63,63,63,63,-42,63,-50,-51,-52,-53,-56,63,63,63,63,-46,63,-81,-85,-82,-86,-88,63,-87,-84,-83,]),'EMBED_PYTHON':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,105,106,107,122,123,125,136,137,138,139,140,157,170,201,207,],[67,-34,67,-38,67,-49,-54,-55,67,67,67,67,-42,67,-50,-51,-52,-53,-56,67,67,67,67,-46,67,-81,-85,-82,-86,-88,67,-87,-84,-83,]),'COLON':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[68,-34,68,-38,68,-49,-54,-55,68,68,68,68,-42,68,-50,-51,-52,-53,-56,68,68,68,68,68,68,-46,68,-81,-85,-82,-86,-88,68,68,-87,-84,-83,]),'SET':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[69,-34,69,-38,69,-49,-54,-55,69,69,69,69,-42,69,-50,-51,-52,-53,-56,69,69,69,69,69,69,-46,69,-81,-85,-82,-86,-88,69,69,-87,-84,-83,]),'PYTHON_EXP':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[76,-34,76,-38,76,-49,-54,-55,76,76,76,76,-42,76,-50,-51,-52,-53,-56,76,76,76,76,76,76,-46,76,-81,-85,-82,-86,-88,76,76,-87,-84,-83,]),'FOR':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,97,98,99,100,101,105,106,107,122,123,125,136,137,138,139,140,157,170,201,207,],[77,-34,77,-38,77,-49,-54,-55,77,77,77,77,-42,77,-50,-51,-52,-53,-56,77,77,77,77,-46,77,-81,-85,-82,-86,-88,77,-87,-84,-83,]),'RAND_INT':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[78,-34,78,-38,78,-49,-54,-55,78,78,78,78,-42,78,78,-50,-51,-52,-53,-56,78,78,78,78,78,78,-46,78,-81,-85,-82,-86,-88,78,78,-87,-84,-83,]),'RAND_DOUBLE':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[79,-34,79,-38,79,-49,-54,-55,79,79,79,79,-42,79,79,-50,-51,-52,-53,-56,79,79,79,79,79,79,-46,79,-81,-85,-82,-86,-88,79,79,-87,-84,-83,]),'CURRENT_DATE':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[80,-34,80,-38,80,-49,-54,-55,80,80,80,80,-42,80,80,-50,-51,-52,-53,-56,80,80,80,80,80,80,-46,80,-81,-85,-82,-86,-88,80,80,-87,-84,-83,]),'CURRENT_TIMESTAMP':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[81,-34,81,-38,81,-49,-54,-55,81,81,81,81,-42,81,81,-50,-51,-52,-53,-56,81,81,81,81,81,81,-46,81,-81,-85,-82,-86,-88,81,81,-87,-84,-83,]),'RAND_STRING':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[82,-34,82,-38,82,-49,-54,-55,82,82,82,82,-42,82,82,-50,-51,-52,-53,-56,82,82,82,82,82,82,-46,82,-81,-85,-82,-86,-88,82,82,-87,-84,-83,]),'SEQUENCE':([33,34,38,39,44,45,49,50,64,65,66,87,88,90,94,97,98,99,100,101,102,104,105,106,107,122,123,125,136,137,138,139,140,157,162,170,201,207,],[83,-34,83,-38,83,-49,-54,-55,83,83,83,83,-42,83,83,-50,-51,-52,-53,-56,83,83,83,83,83,83,-46,83,-81,-85,-82,-86,-88,83,83,-87,-84,-83,]),'FINAL_CHECK':([36,84,158,159,],[86,86,-41,-43,]),'EQUAL':([42,62,],[94,102,]),'SEMICOLON':([46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,70,71,72,73,74,75,109,129,130,131,132,149,160,161,163,164,165,167,168,174,175,182,184,189,190,195,196,203,208,],[98,99,100,101,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-74,-19,-20,-21,-22,-23,-24,-71,-74,-58,-59,-32,-77,-76,-75,-89,-73,-79,-70,-31,-27,-28,-72,-78,-57,-80,-29,-30,-25,-26,]),'COMMA':([52,53,54,55,56,57,58,59,60,61,70,71,72,73,74,75,109,129,135,148,149,150,151,154,155,160,161,164,165,167,168,174,175,182,184,185,186,190,192,195,196,200,203,208,],[-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-19,-20,-21,-22,-23,-24,-71,-74,162,171,-77,172,173,176,177,-76,-75,171,171,-70,-31,-27,-28,-72,-78,193,194,171,198,-29,-30,204,-25,-26,]),'RPAREN':([52,53,54,55,56,57,58,59,60,61,70,71,72,73,74,75,109,129,141,145,146,149,152,153,160,161,164,165,166,167,168,174,175,180,182,184,187,188,190,191,195,196,199,202,203,206,208,],[-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-19,-20,-21,-22,-23,-24,-71,-74,163,167,168,-77,174,175,-76,-75,-73,-79,182,-70,-31,-27,-28,189,-72,-78,195,196,-80,197,-29,-30,203,205,-25,208,-26,]),'LBRACKET':([62,129,],[103,103,]),'LPAREN':([63,67,69,76,78,79,80,81,82,83,110,169,],[104,108,111,112,115,116,117,118,119,120,144,183,]),'RESULT_SET':([68,],[110,]),'EACH':([77,],[114,]),'SHARED_LIST':([102,],[132,]),'INTO':([109,129,149,160,161,165,184,],[142,-74,-77,-76,-75,181,-78,]),'WITH':([109,],[143,]),'IN':([113,],[147,]),'RBRACKET':([133,134,],[160,161,]),'RANGE':([147,],[169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'test_spec':([0,],[1,]),'config_spec':([0,],[2,]),'db_config_spec':([0,],[3,]),'case_spec':([2,],[5,]),'case_stmt':([2,5,],[6,11,]),'runtime_config_spec':([3,],[8,]),'case_name':([7,],[12,]),'case_start':([12,],[16,]),'case_body':([16,],[20,]),'dynamic_param_stmt':([16,],[21,]),'init_stmt':([16,21,],[22,28,]),'case_end':([20,],[26,]),'do_stmt':([22,28,],[29,35,]),'d_start':([23,],[31,]),'init_start':([24,],[33,]),'undo_stmt':([29,35,],[36,84,]),'do_start':([30,],[38,]),'dynamic_var_declarations':([31,],[40,]),'dynamic_var_declaration':([31,40,],[41,92,]),'init_body':([33,],[43,]),'executable_stmts':([33,38,64,65,66,87,122,],[44,90,105,106,107,125,157,]),'executable_stmt':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[45,45,97,45,45,45,45,97,97,97,97,45,97,97,]),'expression':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[46,46,46,46,46,46,46,46,130,135,46,46,46,46,46,46,180,]),'assignment':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'assertion':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'for_stmt':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'for_each_stmt':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'embed_python_stmt':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'query_stmt':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'result_set_query_stmt':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'query_into_stmt':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'query_with_stmt':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'query_with_into_stmt':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'var_name':([33,38,44,64,65,66,87,90,102,104,105,106,107,114,122,125,142,143,157,162,171,181,],[57,57,57,57,57,57,57,57,57,57,57,57,57,149,57,57,149,149,57,57,184,149,]),'set':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'rule':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[59,59,59,59,59,59,59,59,128,59,59,59,59,59,59,59,59,59,]),'python_expr':([33,38,44,64,65,66,87,90,102,104,105,106,107,122,125,157,162,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'for_start1':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'for_start2':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'for_each_start':([33,38,44,64,65,66,87,90,105,106,107,122,125,157,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'random_int':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'random_double':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'current_date':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'current_timestamp':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'random_string':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'sequence':([33,38,44,64,65,66,87,90,94,102,104,105,106,107,122,125,157,162,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'final_check_stmt':([36,84,],[85,121,]),'undo_start':([37,],[87,]),'do_body':([38,],[89,]),'d_end':([40,],[91,]),'init_end':([43,],[95,]),'final_check_start':([86,],[122,]),'undo_body':([87,],[124,]),'do_end':([89,],[126,]),'shared_var':([102,],[131,]),'for_end':([105,106,],[136,138,]),'for_each_end':([107,],[139,]),'var_list':([114,142,143,181,],[148,164,165,190,]),'final_body':([122,],[156,]),'undo_end':([124,],[158,]),'final_check_end':([156,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> test_spec","S'",1,None,None,None),
  ('test_spec -> config_spec case_spec','test_spec',2,'p_test_spec','cmp_concurrent.py',575),
  ('config_spec -> db_config_spec runtime_config_spec','config_spec',2,'p_config_spec','cmp_concurrent.py',580),
  ('db_config_spec -> DB_CONFIG LBRACE STRING RBRACE','db_config_spec',4,'p_db_config_spec','cmp_concurrent.py',585),
  ('runtime_config_spec -> RUNTIME_CONFIG LBRACE STRING RBRACE','runtime_config_spec',4,'p_runtime_config_spec','cmp_concurrent.py',592),
  ('case_spec -> case_stmt','case_spec',1,'p_case_spec','cmp_concurrent.py',603),
  ('case_spec -> case_spec case_stmt','case_spec',2,'p_case_spec','cmp_concurrent.py',604),
  ('case_stmt -> TEST_CASE case_name case_start case_body case_end','case_stmt',5,'p_case_stmt','cmp_concurrent.py',609),
  ('case_name -> ID','case_name',1,'p_case_name','cmp_concurrent.py',614),
  ('case_start -> LBRACE','case_start',1,'p_case_start','cmp_concurrent.py',631),
  ('case_end -> RBRACE','case_end',1,'p_case_end','cmp_concurrent.py',637),
  ('case_body -> dynamic_param_stmt init_stmt do_stmt undo_stmt final_check_stmt','case_body',5,'p_case_body','cmp_concurrent.py',666),
  ('case_body -> init_stmt do_stmt undo_stmt final_check_stmt','case_body',4,'p_case_body','cmp_concurrent.py',667),
  ('dynamic_param_stmt -> DYNAMIC_PARAM d_start dynamic_var_declarations d_end','dynamic_param_stmt',4,'p_dynamic_param_stmt','cmp_concurrent.py',672),
  ('d_start -> LBRACE','d_start',1,'p_d_start','cmp_concurrent.py',677),
  ('d_end -> RBRACE','d_end',1,'p_d_end','cmp_concurrent.py',682),
  ('dynamic_var_declarations -> dynamic_var_declarations dynamic_var_declaration','dynamic_var_declarations',2,'p_var_declarations','cmp_concurrent.py',687),
  ('dynamic_var_declarations -> dynamic_var_declaration','dynamic_var_declarations',1,'p_var_declarations','cmp_concurrent.py',688),
  ('dynamic_var_declaration -> ID EQUAL rule','dynamic_var_declaration',3,'p_var_declaration','cmp_concurrent.py',693),
  ('rule -> random_int','rule',1,'p_rule','cmp_concurrent.py',698),
  ('rule -> random_double','rule',1,'p_rule','cmp_concurrent.py',699),
  ('rule -> current_date','rule',1,'p_rule','cmp_concurrent.py',700),
  ('rule -> current_timestamp','rule',1,'p_rule','cmp_concurrent.py',701),
  ('rule -> random_string','rule',1,'p_rule','cmp_concurrent.py',702),
  ('rule -> sequence','rule',1,'p_rule','cmp_concurrent.py',703),
  ('random_int -> RAND_INT LPAREN NUMBER COMMA NUMBER COMMA NUMBER RPAREN','random_int',8,'p_random_int','cmp_concurrent.py',708),
  ('random_double -> RAND_DOUBLE LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER RPAREN','random_double',10,'p_random_double','cmp_concurrent.py',713),
  ('current_date -> CURRENT_DATE LPAREN NUMBER RPAREN','current_date',4,'p_current_date','cmp_concurrent.py',718),
  ('current_timestamp -> CURRENT_TIMESTAMP LPAREN NUMBER RPAREN','current_timestamp',4,'p_current_timestamp','cmp_concurrent.py',723),
  ('random_string -> RAND_STRING LPAREN NUMBER COMMA NUMBER RPAREN','random_string',6,'p_random_string','cmp_concurrent.py',728),
  ('sequence -> SEQUENCE LPAREN NUMBER COMMA NUMBER RPAREN','sequence',6,'p_sequence','cmp_concurrent.py',733),
  ('python_expr -> PYTHON_EXP LPAREN STRING RPAREN','python_expr',4,'p_python_expr','cmp_concurrent.py',738),
  ('shared_var -> SHARED_LIST','shared_var',1,'p_shared_var','cmp_concurrent.py',743),
  ('init_stmt -> INIT init_start init_body init_end','init_stmt',4,'p_init_stmt','cmp_concurrent.py',748),
  ('init_start -> LBRACE','init_start',1,'p_init_start','cmp_concurrent.py',753),
  ('init_end -> RBRACE','init_end',1,'p_init_end','cmp_concurrent.py',759),
  ('init_body -> executable_stmts','init_body',1,'p_init_body','cmp_concurrent.py',765),
  ('do_stmt -> DO do_start do_body do_end','do_stmt',4,'p_do_stmt','cmp_concurrent.py',770),
  ('do_start -> LBRACE','do_start',1,'p_do_start','cmp_concurrent.py',775),
  ('do_end -> RBRACE','do_end',1,'p_do_end','cmp_concurrent.py',781),
  ('do_body -> executable_stmts','do_body',1,'p_do_body','cmp_concurrent.py',787),
  ('undo_stmt -> UNDO undo_start undo_body undo_end','undo_stmt',4,'p_undo_stmt','cmp_concurrent.py',792),
  ('undo_start -> LBRACE','undo_start',1,'p_undo_start','cmp_concurrent.py',797),
  ('undo_end -> RBRACE','undo_end',1,'p_undo_end','cmp_concurrent.py',803),
  ('undo_body -> executable_stmts','undo_body',1,'p_undo_body','cmp_concurrent.py',809),
  ('final_check_stmt -> FINAL_CHECK final_check_start final_body final_check_end','final_check_stmt',4,'p_final_check_stmt','cmp_concurrent.py',814),
  ('final_check_start -> LBRACE','final_check_start',1,'p_final_check_start','cmp_concurrent.py',819),
  ('final_body -> executable_stmts','final_body',1,'p_final_body','cmp_concurrent.py',825),
  ('final_check_end -> RBRACE','final_check_end',1,'p_final_check_end','cmp_concurrent.py',830),
  ('executable_stmts -> executable_stmt','executable_stmts',1,'p_executable_stmts','cmp_concurrent.py',836),
  ('executable_stmts -> executable_stmts executable_stmt','executable_stmts',2,'p_executable_stmts','cmp_concurrent.py',837),
  ('executable_stmt -> expression SEMICOLON','executable_stmt',2,'p_executable_stmt','cmp_concurrent.py',842),
  ('executable_stmt -> assignment SEMICOLON','executable_stmt',2,'p_executable_stmt','cmp_concurrent.py',843),
  ('executable_stmt -> assertion SEMICOLON','executable_stmt',2,'p_executable_stmt','cmp_concurrent.py',844),
  ('executable_stmt -> for_stmt','executable_stmt',1,'p_executable_stmt','cmp_concurrent.py',845),
  ('executable_stmt -> for_each_stmt','executable_stmt',1,'p_executable_stmt','cmp_concurrent.py',846),
  ('executable_stmt -> embed_python_stmt SEMICOLON','executable_stmt',2,'p_executable_stmt','cmp_concurrent.py',847),
  ('assertion -> EXPECT_EQUAL LPAREN expression COMMA expression RPAREN','assertion',6,'p_assertion','cmp_concurrent.py',852),
  ('assignment -> ID EQUAL expression','assignment',3,'p_assignment','cmp_concurrent.py',857),
  ('assignment -> ID EQUAL shared_var','assignment',3,'p_assignment','cmp_concurrent.py',858),
  ('expression -> query_stmt','expression',1,'p_expression','cmp_concurrent.py',867),
  ('expression -> result_set_query_stmt','expression',1,'p_expression','cmp_concurrent.py',868),
  ('expression -> query_into_stmt','expression',1,'p_expression','cmp_concurrent.py',869),
  ('expression -> query_with_stmt','expression',1,'p_expression','cmp_concurrent.py',870),
  ('expression -> query_with_into_stmt','expression',1,'p_expression','cmp_concurrent.py',871),
  ('expression -> var_name','expression',1,'p_expression','cmp_concurrent.py',872),
  ('expression -> set','expression',1,'p_expression','cmp_concurrent.py',873),
  ('expression -> rule','expression',1,'p_expression','cmp_concurrent.py',874),
  ('expression -> python_expr','expression',1,'p_expression','cmp_concurrent.py',875),
  ('expression -> NUMBER','expression',1,'p_expression','cmp_concurrent.py',876),
  ('set -> SET LPAREN STRING RPAREN','set',4,'p_set','cmp_concurrent.py',881),
  ('query_stmt -> COLON STRING','query_stmt',2,'p_query_stmt','cmp_concurrent.py',886),
  ('result_set_query_stmt -> COLON RESULT_SET LPAREN STRING RPAREN','result_set_query_stmt',5,'p_result_set_query_stmt','cmp_concurrent.py',891),
  ('query_into_stmt -> COLON STRING INTO var_list','query_into_stmt',4,'p_query_into_stmt','cmp_concurrent.py',898),
  ('var_name -> ID','var_name',1,'p_var_name','cmp_concurrent.py',907),
  ('var_name -> ID LBRACKET NUMBER RBRACKET','var_name',4,'p_var_name','cmp_concurrent.py',908),
  ('var_name -> ID LBRACKET ID RBRACKET','var_name',4,'p_var_name','cmp_concurrent.py',909),
  ('var_list -> var_name','var_list',1,'p_var_list','cmp_concurrent.py',916),
  ('var_list -> var_list COMMA var_name','var_list',3,'p_var_list','cmp_concurrent.py',917),
  ('query_with_stmt -> COLON STRING WITH var_list','query_with_stmt',4,'p_query_with_stmt','cmp_concurrent.py',925),
  ('query_with_into_stmt -> COLON STRING WITH var_list INTO var_list','query_with_into_stmt',6,'p_query_with_into','cmp_concurrent.py',944),
  ('for_stmt -> for_start1 executable_stmts for_end','for_stmt',3,'p_for_stmt','cmp_concurrent.py',968),
  ('for_stmt -> for_start2 executable_stmts for_end','for_stmt',3,'p_for_stmt','cmp_concurrent.py',969),
  ('for_start1 -> FOR ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN LBRACE','for_start1',10,'p_for_start1','cmp_concurrent.py',974),
  ('for_start2 -> FOR ID IN RANGE LPAREN ID RPAREN LBRACE','for_start2',8,'p_for_start2','cmp_concurrent.py',980),
  ('for_end -> RBRACE','for_end',1,'p_for_end','cmp_concurrent.py',986),
  ('for_each_stmt -> for_each_start executable_stmts for_each_end','for_each_stmt',3,'p_for_each_stmt','cmp_concurrent.py',991),
  ('for_each_start -> FOR EACH var_list LBRACE','for_each_start',4,'p_for_each_start','cmp_concurrent.py',996),
  ('for_each_end -> RBRACE','for_each_end',1,'p_for_each_end','cmp_concurrent.py',1010),
  ('embed_python_stmt -> EMBED_PYTHON LPAREN STRING RPAREN','embed_python_stmt',4,'p_embed_python_stmt','cmp_concurrent.py',1015),
]
